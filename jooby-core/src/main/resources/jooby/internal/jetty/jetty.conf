# Jetty setup

jetty.headerCacheSize = 512

jetty.outputBufferSize = 32768

jetty.requestHeaderSize = 8192

jetty.responseHeaderSize = 8192

jetty.sendServerVersion = false

jetty.sendXPoweredBy = false

###################################################################################################
# HTTP Connector
###################################################################################################
jetty.http.acceptQueueSize = 0

# Use -1 to disable
jetty.http.soLingerTime = -1

# Max time to stop the server (in millis)
jetty.http.stopTimeout = 10000

# Sets the maximum Idle time for a connection, which roughly translates to the Socket#setSoTimeout(int)
# call, although with NIO implementations other mechanisms may be used to implement the timeout.
# The max idle time is applied:
#   When waiting for a new message to be received on a connection
#   When waiting for a new message to be sent on a connection

# This value is interpreted as the maximum time between some progress being made on the connection.
# So if a single byte is read or written, then the timeout is reset.
jetty.http.idleTimeout = 30000

###################################################################################################
# HTTPS Connector (inherited everything from HTTP Connector)
###################################################################################################

jetty.https.idleTimeout = 50000

###################################################################################################
# SSL
###################################################################################################
ssl.keystore.path=/jooby/internal/jetty/keystore
ssl.keystore.password="OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4"
ssl.keymanager.password="OBF:1u2u1wml1z7s1z7a1wnl1u2g"

###################################################################################################
# WebSocket
###################################################################################################

# The maximum size of a text message during parsing/generating.
# Text messages over this maximum will result in a close code 1009 {@link StatusCode#MESSAGE_TOO_LARGE}
jetty.ws.policy.maxTextMessageSize = 65536

# The maximum size of a text message buffer.
# Used ONLY for stream based message writing.
jetty.ws.policy.maxTextMessageBufferSize = 32768

# The maximum size of a binary message during parsing/generating.
# Binary messages over this maximum will result in a close code 1009 {@link StatusCode#MESSAGE_TOO_LARGE}
jetty.ws.policy.maxBinaryMessageSize = 65536

# The maximum size of a binary message buffer
# Used ONLY for for stream based message writing
jetty.ws.policy.maxBinaryMessageBufferSize = 32768

# The timeout in ms (milliseconds) for async write operations.
# Negative values indicate a disabled timeout.
jetty.ws.policy.asyncWriteTimeout = 60000

# The time in ms (milliseconds) that a websocket may be idle before closing.
jetty.ws.policy.idleTimeout = 300000

# The size of the input (read from network layer) buffer size.
jetty.ws.policy.inputBufferSize = 4096

# Close session on error?
jetty.ws.closeOnError = true

